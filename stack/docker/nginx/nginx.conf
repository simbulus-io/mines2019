# coding: utf-8

# References [1]: http://www.codestance.com/tutorials-archive/nginx-tuning-for-best-performance-255

# [1] you must set worker processes based on your CPU cores
worker_processes 1;
 
# last arg to error_log is verbosity flag (see guidelines below)
error_log  /var/log/nginx/error.log error;
# debug – Useful debugging information to help determine where the problem lies.
# info – Informational messages that aren’t necessary to read but may be good to know.
# notice – Something normal happened that is worth noting.
# warn – Something unexpected happened, however is not a cause for concern.
# error – Something was unsuccessful.
# crit – There are problems that need to be critically addressed.
# alert – Prompt action is required.
# emerg – The system is in an unusable state and requires immediate attention.

events {
  # [1] : worker_connections determines how much clients will be served per worker
  # max clients = worker_connections * worker_processes
  # max clients is also limited by the number of socket connections available on the system (~64k)
  worker_connections  32;

  accept_mutex off;
  #  to on if you have more than 1 worker_processes 
}

http {
 
  # use the kernel sendfile
  sendfile        on;
  # prepend http headers before sendfile() 
  tcp_nopush     on;

  # [1] don't buffer data sent, good for small data bursts in real time
  tcp_nodelay        on;

  # [1] allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  server_tokens off;

  client_body_buffer_size 10K;
  client_header_buffer_size 1K;

  gzip  on;
  gzip_vary on;
  gzip_min_length 500;
  
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  gzip_types text/plain text/xml text/css
     text/comma-separated-values
     text/javascript application/x-javascript
     application/atom+xml image/x-icon;


server {
  	listen 80;
    server_name *.wootmath.com <%= @my_ip %> 127.0.0.1 localhost;
    error_log  /var/log/nginx/error.log debug;
    access_log  /var/log/nginx/access-80.log;

    merge_slashes on;  # collapse repreaed url slashes to singe, e.g. foo//bar.html --> foo/bar.html
    
    ignore_invalid_headers off;

    location = /favicon.ico {
      alias /www-static/img/favicon.ico;
    }

    location ~ ^/static/ {
      rewrite ^/static/(.*)$ /$1 break;
      autoindex on;
      root /www-static;
    }

    location ~ ^/shared/ {
      rewrite ^/shared/(.*)$ /$1 break;
      autoindex on;
      root /shared;
    }

    location ~ ^/tmp/ {
      rewrite ^/tmp/(.*)$ /$1 break;
      autoindex on;
      root /shared_tmp;
    }

    location ~ ^/content/v1.0/ {
        # rewrite ^/content/(.*)$ /$1 break;
        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Host $http_host;
        proxy_pass         "http://express-content:5101";
    }

    location ~ ^/content {
      rewrite ^/content/(.*)$ /$1 break;
      autoindex on;
      root /www-content;
    }

    # location ~ ^/feedback/ {
    #     # rewrite ^/feedback/(.*)$ /$1 break;
    #     proxy_set_header   X-Forwarded-For $remote_addr;
    #     proxy_set_header   X-Forwarded-Proto $scheme;
    #     proxy_set_header   Host $http_host;
    #     proxy_pass         "http://express-feedback:5101";
    # }
  }

}
